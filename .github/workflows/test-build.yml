name: Create Test Build
on: workflow_dispatch
jobs:
  get_version:
    uses: ./.github/workflows/build.yml

  build_windows:
    runs-on: windows-latest
    needs: [get_version]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Preparing Cache..
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            goxlr-utility/target
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-release

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

#      - name: Build Packages
#        run: iscc.exe ci/goxlr-utility.iss
#        shell: cmd

      - name: Build NSIS Packages
        run: makensis.exe /DPRODUCT_VERSION=${{ needs.get_version.outputs.version }} ci/nsis/goxlr-utility.nsi
        shell: cmd

      - name: Upload Installer
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifact
          path: ./ci/Output/*.exe

  build:
    runs-on: ubuntu-latest
    needs: [get_version]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Required Libraries
        run: |
          sudo apt-get update
          sudo apt-get install libpulse0 libdbus-1-dev pkg-config libspeechd-dev

      - name: Install cargo-deb and cargo-generate-rpm
        run: cargo install cargo-deb cargo-generate-rpm

      - name: Preparing Cache..
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-release-

      - name: Build Packages
        run: ./ci/build-packages
        shell: bash

      - name: Upload DEB Artifact
        uses: actions/upload-artifact@v3
        with:
          name: debian-artifact
          path: ./target/debian/*.deb

      - name: Upload RPM Artifact
        uses: actions/upload-artifact@v3
        with:
          name: rpm-artifact
          path: ./target/generate-rpm/*.rpm
